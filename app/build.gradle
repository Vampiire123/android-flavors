import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

new File("app/src/").eachDir{
    if(it.name != "main" && it.name != "androidTest" && it.name != "test") {
        apply from: 'src/' + it.name + '/build.gradle'
    }
}

repositories {
    google()
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"

    buildTypes {
        debug {
            debuggable true
            versionNameSuffix "-DEBUG"

        }
        staging {
            debuggable true
            versionNameSuffix "-STAGING"
            applicationIdSuffix "staging"

        }
        release {
            debuggable false
        }
    }
}

dependencies {
    //dependencies

    //we don't use it but it's here for example purposes.

//    if (!getCurrentFlavor().isEmpty()) {
//        configurations.getByName(getCurrentFlavor() + "Compile") { Configuration conf ->
//            conf.dependencies.addAll rootProject.ext.dependencyList.collect { String s -> project.dependencies.create s }
//            conf.dependencies.add(project.dependencies.create("io.inspace.app."+getCurrentFlavor()+":somelibrary@aar"))
//        }
//    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.google.android.gms:play-services-gcm:11.4.0'
    implementation 'com.google.android.gms:play-services-maps:11.4.0'
}

/**
 * Method to fetch current flavor name during build time.
 * Taken from StackOverflow.
 */
def getCurrentFlavorName() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern
    if (tskReqStr.contains("assemble"))
        pattern = Pattern.compile("assemble(\\w+)(Debug|Staging|Release)")
    else
        pattern = Pattern.compile("generate(\\w+)(Debug|Staging|Release)")

    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find()) {
        return matcher.group(1).toLowerCase()
    } else {
        return ""
    }

}
